@{
    ViewBag.Title = "Адреса";
}

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-primary list-panel" id="list-panel">
            <div class="panel-heading list-panel-heading">
                <button type="button" class="btn btn-default btn-md" data-toggle="modal" data-url="@Url.Action("Create","Address")" id="btnCreate">
                    <span class="glyphicon glyphicon-new-window" aria-hidden="true"></span> Добавить
                </button>
            </div>
            <div class="panel-body">
                <table id="data-table"
                       class="table table-striped table-bordered"
                       style="width:100%"></table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="CreateModal" aria-hidden="true" data-backdrop="static">
    <div id="createContainer">
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="EditModal" aria-hidden="true" data-backdrop="static">
    <div id="editContainer">
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

    var assetListVM;
    $(function () {
        assetListVM = {
            dt: null,

            init: function () {
                dt = $('#data-table').DataTable({
                    "serverSide": true,
                    "processing": true,
                    "ajax": {
                        "url": "@Url.Action("Get","Address")",
                        "data": function (data) {
                        }
                    },
                    "columns": [
                        { "title": "Регион", "data": "Region", "sortable": false },
                        { "title": "Район", "data": "District", "searchable": true, "sortable": true },
                        { "title": "Город", "data": "City", "searchable": true, "sortable": true },
                        { "title": "Нас.пункт", "data": "Locality", "searchable": true, "sortable": true },
                        { "title": "Улица", "data": "Street", "searchable": true, "sortable": true },
                        { "title": "Дом", "data": "HouseNumber", "searchable": true, "sortable": true },
                        { "title": "Дополнение", "data": "Additional", "searchable": true, "sortable": true },
                        {
                            "width": "10",
                            "data": "Id",
                            "searchable": false,
                            "sortable": false,
                            "render": function (data, type, full, meta) {
                                return '<a href="@Url.Action("Edit","Address")?id=' + data + '" class="editEntity" title="Изменить"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span></a> ';
                            }
                        }
                    ],
                    "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Все"]
                    ],
                    "language": {
                        "emptyTable": "Нет данных",
                        "info": "Показано с _START_ по _END_ из _TOTAL_",
                        "infoEmpty": "Показано с 0 по 0 из 0",
                        "lengthMenu": "Показывать по _MENU_",
                        "loadingRecords": "Загрузка...",
                        "processing": "Отбор данных...",
                        "search": "Поиск:",
                        "paginate": {
                            "first": "Первая",
                            "last": "Последняя",
                            "next": "Следующая",
                            "previous": "Предыдущая"
                        },
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        }
                    }
                });
            },
            refresh: function () {
                dt.ajax.reload();
            }
        }

        // initialize the datatables
        assetListVM.init();

        $("#btnCreate").on("click", function () {

            var url = $(this).data("url");

            $.get(url, function (data) {
                $('#createContainer').html(data);

                $('#createModal').modal('show');
            });

        });

        $('#data-table').on("click", ".editEntity", function (event) {

            event.preventDefault();

            var url = $(this).attr("href");

            $.get(url, function (data) {
                $('#editContainer').html(data);

                $('#editModal').modal('show');
            });

        });
    });


        /**** Create Entity Ajax Form CallBack ********/

        function CreateEntitySuccess(data) {

            if (data != "success") {
                $('#createDriverContainer').html(data);
                return;
            }
            $('#createModal').modal('hide');
            $('#createContainer').html("");
            assetListVM.refresh();

        }

        /**** Edit Entity Ajax Form CallBack ********/

        function UpdateEntitySuccess(data) {

            if (data != "success") {
                $('#editContainer').html(data);
                return;
            }
            $('#editModal').modal('hide');
            $('#editContainer').html("");
            assetListVM.refresh();

        }

    </script>
}

